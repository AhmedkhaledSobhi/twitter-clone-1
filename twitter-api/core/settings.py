"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('secret_key')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "oauth2_provider",
    "social_django",
    "drf_social_oauth2",
    'corsheaders',
    "rest_framework",
    "user_control",

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'
AUTH_USER_MODEL = 'user_control.CustomUser'
CORS_ALLOWED_ORIGINS = ['http://localhost:3000', 'http://localhost:3008']

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('db_name'),
        'HOST': os.getenv('host'),
        'PROT': os.getenv('port'),
        'USER': os.getenv('user'),
        'PASSWORD': os.getenv('password')
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'drf_social_oauth2.authentication.SocialAuthentication',
    ),
}

AUTHENTICATION_BACKENDS = (

    # Google OAuth2
    'social_core.backends.google.GoogleOAuth2',

    # Github OAuth2
    'social_core.backends.github.GithubOAuth2',

    # drf-social-oauth2
    'drf_social_oauth2.backends.DjangoOAuth2',

    'drf_social_oauth2.backends.DjangoOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)

OAUTH2_PROVIDER = {
    'OAUTH2_BACKEND_CLASS': 'user_control.backend.OAuth'
}

# Google OAuth2 Settings
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '903796776003-hvlec3ebn0pbc8hmt4ao97g0cbhe9hl8.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile'
]

# GitHub OAuth2 Settings
SOCIAL_AUTH_GITHUB_KEY = 'b4b597ac187ffebdfef2'
SOCIAL_AUTH_GITHUB_SECRET = 'f85e083de88e21fd97eb4fff6df500df0575a86f'
SOCIAL_AUTH_GITHUB_SCOPE = ['read:user']

# Required Fields To Auth
SOCIAL_AUTH_USER_FIELDS = ['email', 'username', 'fullname', 'password']


"""
client id and secret for test only

get Access token
curl -X POST -d "grant_type=password&username=islam.admin&password=123" -u"glDsZeSXmjoLJfUKF4VYnmA6alDU4xt61PGfKHEU:QOU7yyZ33aPGqZvEsE3V9vkdmYNbvny9XKc0OX2ZenhsO2TE4BbcWXDWkdUUWjFzhHTEFkjiIS89Ti8AoZH5dGSUsHkD3Ez118l1PZqxemzg6Ywq6xWYUZh3NkHFCDH2" http://localhost:8000/auth/token

refresh token
curl -X POST -d "grant_type=refresh_token&client_id=glDsZeSXmjoLJfUKF4VYnmA6alDU4xt61PGfKHEU&client_secret=QOU7yyZ33aPGqZvEsE3V9vkdmYNbvny9XKc0OX2ZenhsO2TE4BbcWXDWkdUUWjFzhHTEFkjiIS89Ti8AoZH5dGSUsHkD3Ez118l1PZqxemzg6Ywq6xWYUZh3NkHFCDH2&refresh_token=QEh5BKNOqQzWcSsFdKD58Jk0UQBjRr" http://localhost:8000/auth/token


"""
